/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
  Display current generalized occupied and unoccupied heating and cooling
  setpoints for a selected terminal unit, as well as the corresponding reference
  temperature setpoints.

  Generalized inputs, excluding occupant adjustments and demand controls:
  These points have fixed values over long periods of time, and they do not 
  reflect occupant adjustments at the thermostats.
  - Occupied Heating Setpoint
  - Occupied Cooling Setpoint
  - Unoccupied Heating Setpoint
  - Unoccupied Cooling Setpoint

  Arguments:
  equipRef     Id of selected terminal unit
------------------------------------------------------------------------------*/

(equipRef) => do
  // Normalize input to id
  equipRef= try if(isRef(equipRef)) equipRef else equipRef->id
           catch throw "Input equipRef must be an id or record"
  // Retrieve equip dict
  equip: readById(equipRef)
  
  // Retrieve reference setpoints from dedicated folio record
  refZoneTemps: read(refOccHtg and refOccClg and equipRef==equipRef, false)
  out: if (refZoneTemps==null) {}
       else refZoneTemps
  
  // Retrieve generalized temperature setpoints, via func specified in terminal
  // unit equip tag 'generalizedSpReadFunc'
  genSps: try eval(equip->generalizedSpReadFunc + "(@" + equipRef + ")")
          catch {}
  
  // Build dict, including current values and reference values
  genSps
  .each((v,k) => out= out.set(k,v))
  
  out
end
