/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
  Rolls up a time series in % to determine a final request value of 0 or 1.
  Request is generated if values are greater than 95% and don't subsequently
  go below 85% (release value for hysteresis). Typically used for damper
  positions and other PID loop outputs to generate request for ASHRAE
  Guideline 36 style trim-and-respond resets.
  
  Arguments: 
  *** Typical arguments for fold functions with arity of two
------------------------------------------------------------------------------*/

(val, acc) => do
  if (val == foldStart()) {request:0, trigger:95%, release:85%}
  else if (val == foldEnd()) acc->request
  // Skip invalid values, only if all values are na will the result be na
  else if (val == na() or val == null) acc
  
  // Trigger
  else if (val >= acc->trigger) {request:1,
                                 trigger:acc->trigger,
                                 release:acc->release}
  // Release
  else if (val < acc->release) {request:0,
                                trigger:acc->trigger,
                                release:acc->release}
  // Hysteresis: pass through current value
  else acc
end
/*------------------------------------------------------------------------------
  Updates
  2020-03-30  Raphael Vitti
    Added copyright and license information.
  2020-08-19  Raphael Vitti
    Optimized by removing "return" instructions and using elseif
------------------------------------------------------------------------------*/
