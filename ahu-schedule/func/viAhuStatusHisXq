/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
  For a selected AHU and span, show available run cmd and run sensor history
  data, as well as speed data, one or two levels below AHU equip.
  
  Arguments: 
  ahuRef              ref, id of the AHU
  span                dateSpan, dates of data to display
  hisRollupInterval   Number, time for rollup to align multiple his
  limit               Number, limit for hisRead
------------------------------------------------------------------------------*/

(ahuRef, span: pastMonth(), hisRollupInterval:15min, limit:10000) => do
  // Process ahuRef to accept id or record
  ahuRef= if (isRef(ahuRef)) ahuRef
          else try ahuRef->id
          catch throw "Input: ahuRef is neither a ref nor a record"

  // Load AHU record, to access related site info
  ahu: xq()
  .xqReadByIds([ahuRef])
  .xqExecute
  .first
  
  // Load site record
  site: xq()
  .xqReadByIds([ahu->siteRef])
  .xqExecute
  .first
  
  // Determine siteDis
  siteDis: if (ahu.has("siteDis")) ahu->siteDis
           else reGroups(r"0*(\d{1,3}\w*)", site->dis)[1]

  // Locate points of interest, load trends
  hisGrid: xq()
  .xqUseReplicas()
  .xqReadAll(point and his and (equipRef->equipRef==ahuRef or equipRef==ahuRef)
             and ((run and (cmd or sensor) and kind=="Bool") or speed))
  .xqHisRead(span, {limit:limit})
  .xqExecute
  
  // Perform rollup
  try hisGrid= hisGrid.hisRollupAuto(hisRollupInterval)
  // If rollup is not successful, return null
  catch return {}.toGrid.addMeta({noData: "No relevant trends were found."})

  // Join hisGrids
  if (isEmpty(hisGrid))
    return {}.toGrid.addMeta({noData: "No relevant trends were found."})
  
  // Format
  hisGrid= hisGrid
  .toolHisGridShowGaps(2*hisRollupInterval)
  
  // Return
  hisGrid.addMeta({title:"Selection of Relevant Trends"})
end

/*------------------------------------------------------------------------------
  Updates
  2022-02-15  Raphael Vitti
    Created.
  2022-07-28  Chris Weyandt
    Added WiFi data for whole building.
------------------------------------------------------------------------------*/