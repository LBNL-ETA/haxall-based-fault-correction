/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
  Push input schedule information to a new target schedule point downstream
  of the related AHU equip.
  
  Arguments: 
  pushScheduleDict      See related template, includes scheduleGrid
------------------------------------------------------------------------------*/
(pushScheduleDict) => do
  // Normalize action input
  rec: actionNormInput(pushScheduleDict, "dict")

  // Retrieve target equip
  equip: xq()
         .xqReadByIds([rec->id])
         .xqExecute
         .first

  // Retrieve target site (for tz info)
  site: xq()
        .xqReadByIds([equip->siteRef])
        .xqExecute
        .first

  // Retrieve target equip schedule, if it exists
  schPt: xq()
         .xqProjs(["integration"])
         .xqReadAll(run and sp and point and equipRef==rec->id)
         .xqExecute
         .first
  
  // Create updated target schedule dict
  schPtDict: {
    kind:"Bool",
    point,
    run,
    sp,
    schedule,
    cur,
    his,
    hisFunc: "scheduleHis",
    hisMode: "cov",
    calendarRef: rec->calendarRef,
    scheduleGrid: rec->observedScheduleGrid,
    equipRef: equip->id,
    spaceRef: equip->spaceRef,
    siteRef: equip->siteRef,
    navName: "Target Schedule",
    disMacro: "\$equipRef \$navName",
    tz: site->tz
  }

  // Update existing or create new target schedule point
  xq()
  .xqProjs(["integration"])
  .xqDefine("exRec", schPt)
  .xqDefine("changes", schPtDict)
  .xqEval("commit(diff(exRec, changes, if (exRec==null) {add} else null))")
  .xqExecute
  .first
end

/*------------------------------------------------------------------------------
  Updates
  2022-02-24  Raphael Vitti
    Created.
------------------------------------------------------------------------------*/