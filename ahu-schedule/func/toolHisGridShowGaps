/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
  For a given history grid, detect data gaps longer than the given threshold
  and insert NA() value to show gap. Only process points that match provided
  filter, which by default excludes cov trends.
  
  Arguments:
  hisGrid         History grid to analyze
  maxGap          Number (time), longest allowed gap between readings
  tagsFilter      Only highlight gaps in points that match filter
------------------------------------------------------------------------------*/

(hisGrid, maxGap:1min,
 tagsFilter:"(not hisMode or hisMode!=\"cov\") and kind==\"Number\"") => do
  
  // Default to 15 min
  if (not(isNumber(maxGap))) maxGap= 15min
  
  // For longer intervals, use intervals allowed by hisRollup func
  if (maxGap >= 1yr) maxGap= 1yr
  else if (maxGap >= 3mo) maxGap= 3mo
  else if (maxGap >= 1mo) maxGap= 1mo
  else if (maxGap >= 1wk) maxGap= 1wk
  else if (maxGap >= 1day) maxGap= 1day
  
  // Create filter from tagsFilter string
  filterFunc: filterToFunc(tagsFilter.parseFilter)

  // Determine selected grid and remaining grid
  selColNames: hisGrid.removeCol("ts").colNames
               // Only highlight gaps in points that match filter
               .findAll(colName =>
                 filterFunc(hisGrid.col(colName).meta))
               // Unselect columns with only null or na() values
               .findAll(colName =>
                 hisGrid.colToList(colName)
                        .any v => (v != null and v != na()))
  // Selected grid is the grid in which data gaps will be analyzed
  selGrid: hisGrid.keepCols(["ts"].addAll(selColNames))
                  .findAll(row => row.remove("ts").any(v => v!= null))
  // Remaining grid columns will be passed through "as is"
  remGrid: hisGrid.removeCols(selColNames)
                  .findAll(row => row.remove("ts").any(v => v!= null))

  // Modify columns in selected grid to default to avg rollup if id missing
  selColNames.each(colName =>
    if (hisGrid.col(colName).meta.missing("id"))
      selGrid= selGrid.addColMeta(colName, {id:@a, hisRollupFunc:"avg"}))

  // Add NAN for detected gaps in selected grid
  nanGrid: selGrid
           .hisRollupAuto(maxGap)
           .addMeta({hisKeepEmptyCols: marker()})
           .hisMap(v => if (v==null) return na()
                        else return v)
           .findAll(row => row.any(v => v==na()))

  selGrid= selGrid
           .addRows(nanGrid)
           // After adding NaN rows, resort by chronological order
           .sort((a,b) => a["ts"] <=> b["ts"])
  selGrid= selGrid.reorderCols(selGrid.colNames.moveTo("ts",0))

  // Merge selected and remaining grids back and return
  return hisJoin([selGrid,remGrid])
end

/*------------------------------------------------------------------------------
  Updates
  2020-03-30  Raphael Vitti
    Added copyright and license information.
  2020-05-12  Raphael Vitti
    Commented one section in order to attempt and increase speed. Replaced
    folding function with built-in "avg", faster than custom "foldSample",
    and replaced map with hisMap.
  2020-08-10  Raphael Vitti
    Added hisClip as very partial fix for the following issue: this function
    currently replaces values in valid trends with their x-minute average on
    the x-minute mark, with x being maxGap, creating artifical spikes.
    In 3.0.25, it will be allowed to use the hisKeepEmptyCols tag to keep
    empty cols during a hisMap or a hisFindAll, which should allow for
    improving this algorithm by doing a hisMap to null instead of v during
    gap detection. This might remove valid values on the x-minute mark, but
    will be better than spikes.
  2020-08-11  Raphael Vitti
    Modified to use hisKeepEmptyCols and map valid average values to null in
    order to avoid spikes from, say, 15-minute averages to show in final
    non-rolled-up trends. This removes valid values in some cases.
  2020-08-12  Raphael Vitti
    Using foldSample instead of avg in rollup, with new foldSample, returns
    the first valid sample, which is the same as replaced value if timestamps
    align. Removed hisClip, which could remove useful data for COV trends.
------------------------------------------------------------------------------*/