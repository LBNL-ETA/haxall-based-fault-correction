/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------

/*------------------------------------------------------------------------------
  For a given AHU, use site geo information to determine the reference
  economizer high OAT lockout setpoint that should be used for optimal operation

  Arguments:
  equipRef     Id of selected AHU
------------------------------------------------------------------------------*/

(equipRef) => do
  // Normalize input to rec
  equip: try if(isRef(equipRef)) readById(equipRef) else equipRef
         catch throw "Input equipRef must be an id or record"

  // Use site information to determine reference setpoint (per ASHRAE 90.1)
  zipcode: try reGroups(r".*[A-Z]{2} (\d{5}).*",equip->siteRef->geoAddr)[1]
           catch return null
  
  // Read file that links U.S. zip codes to ASHRAE climate zone and 
  // to ASHRAE reference economizer lockout setpoint
  fips: ioReadCsv(`io/FIPS_v4.csv`)
  
  // Lookup reference lockout setpoint
  try fips.find(x => x["zip"] == zipcode)->lockout_Setpoint
          .parseNumber.as("Â°F")
  catch null
  
end

/*------------------------------------------------------------------------------
  Updates
  2023-01-13  Raphael Vitti
    Created.
  2023-07-06  Chris Weyandt
    Replaced static lookup table with `/io/FIPS_v4.csv`
------------------------------------------------------------------------------*/
