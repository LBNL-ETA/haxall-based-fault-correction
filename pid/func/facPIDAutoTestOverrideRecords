/*------------------------------------------------------------------------------
  Haxall-based (Axon) fault auto-correction package for building HVAC
  system (Haxall-based Fault Correction) Copyright (c) 2022, The
  Regents of the University of California, through Lawrence Berkeley
  National Laboratory (subject to receipt of any required approvals
  from the U.S. Dept. of Energy) and kW Engineering. All rights reserved.

  If you have questions about your rights to use or distribute this software,
  please contact Berkeley Lab's Intellectual Property Office at
  IPO@lbl.gov.

  NOTICE.  This Software was developed under funding from the U.S. Department
  of Energy and the U.S. Government consequently retains certain rights.  As
  such, the U.S. Government has been granted for itself and others acting on
  its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the
  Software to reproduce, distribute copies to the public, prepare derivative 
  works, and perform publicly and display publicly, and to permit others to do
  so.
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
  Review all PID loop test records (pidLoopTest), create associated
  overrideRecord if it does not already exist, or update existing overrideRecord
  
  Arguments:
  N/A
------------------------------------------------------------------------------*/

() => do
  // Cycle through all PID loop test records
  // Including those without startDateTime (could have been reset)
  readAll(pidLoopTest)
  .each testRec => do
    // For each test, check if a related overrideRecord exists
    exDict: read(overrideRecord and pidLoopTestRef==testRec->id, false)
      
    // Determine status of testing
    if (testRec.has("endDateTime")) do
      state: "Closed"
      endDate: testRec->endDateTime.date()
    end else do
      state: "In Progress"
      endDate: null
    end
       
    // Commit new record if an override was performed (startDateTime)
    // and there is no existing, matching overrideRecord
    if (exDict==null and testRec.has("startDateTime")) do
      // Retrieve control variable
      pidLoop: readById(testRec->pidLoopRef)
      cv: readById(pidLoop->controlVariableRef)
      
      // Prepare dict (new or update)
      newDict:
      {description: "Open-loop, step change test was performed by "
         + "facPIDAutoTest to determine proposed PID loop parameters.",
       assignedTo: "SkySpark",
       navName: cv->navName + " overriden for open-loop PID tuning",
       links: [],
       equipRef: cv->equipRef,
       state: state,
       energyValue: "None",
       operationalValue: "Low",
       overrideRecord,
       size: 0,
       startDate: testRec->startDateTime.date(),
       endDate: endDate,
       pidLoopTestRef: testRec->id
      }
    
      recNew(newDict)
    // Else update record
    end else if (exDict!=null) do
      exDict= exDict
      .set("state", state)
      .set("endDate", endDate)
    
      recEdit(exDict)
    end
  end
end

/*------------------------------------------------------------------------------
  Updates
  2021-08-06  Raphael Vitti
    Modified to update overrideRecord even if the test record is missing
    startDateTime, which can happen if a test started and was later reset.
------------------------------------------------------------------------------*/
